name: CI

permissions:
  contents: read
  pull-requests: write
  checks: write

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
    types: [opened, edited, reopened, synchronize, review_requested, submitted]

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install linters
        run: |
          pip install flake8 black

      - name: Run flake8 with Reviewdog
        uses: reviewdog/action-flake8@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          level: error

      - name: Run Black with Reviewdog
        uses: reviewdog/action-black@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          level: info

  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install test dependencies
        run: |
          pip install pytest pytest-cov

      - name: Run unit tests
        run: |
          pytest tests --cov=src --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  sonarqube:
    name: SonarCloud Scan
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: .

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cloc:
    name: Count Lines of Code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Count lines of code
        run: |
          sudo apt-get update
          sudo apt-get install -y cloc
          cloc src/ > cloc-report.txt
          cat cloc-report.txt

      - name: Upload CLOC report
        uses: actions/upload-artifact@v4
        with:
          name: cloc-report
          path: cloc-report.txt
